@using System.Security.Claims;
@model List<BusinessLogic.DTOs.ActorDTO>
@{
	<div class="tableContainer">
		@foreach(var actor in Model){
			<div class="tableNode", id=@actor.Id>
				<div class="inNodeInfo">
					<img src=@actor.PhotoUrl alt="photo" id="image" class="nodeImage" />
					<br />
					<label>@(actor.Name + " " + actor.Surname)</label>
					<br />
					<label>@(actor.BirthYear)</label>
				</div>
				@if (User.Identity.IsAuthenticated && User.FindFirst(ClaimTypes.Role)?.Value == "Admin")
				{
					<div style="display:grid; grid-template-columns: 1fr 1fr">
						<button type="button" onclick="onDetailsButtonClick(event)">Details</button>
						<button type="button" onclick="onDeleteButtonClick(event)">Delete</button>
					</div>
				}
				else
				{
					<div style="display:block; text-align: center">
						<button type="button" onclick="onDetailsButtonClick(event)">Details</button>
					</div>
				}
			</div>
		}
	</div>
}

@section Scripts {
	<script type="text/javascript">
		//Delete buttons
		function onDeleteButtonClick(e){
			if(window.confirm("Do you want to delete this actor?")){
				const id = e.target.parentElement.parentElement.id;
				const href = window.location.href + '/Delete/' + Number(id);
				const xhr = new XMLHttpRequest();
				xhr.open("DELETE", href);
				xhr.onload = function() {
						if(this.status == 200){
							document.location.reload();
						}
						else if(this.status == 401){
							alert("unauthorized");
						} 
						else if(this.status == 403){
							alert("Access denied")
						}
				}
				xhr.send();
			}
		}
		function onDetailsButtonClick(e){

		}
	</script>
}  
